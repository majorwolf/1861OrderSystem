version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: 1861-publichouse-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${PGUSER:-orderapp}
      POSTGRES_PASSWORD: ${PGPASSWORD:-publichouse1861}
      POSTGRES_DB: ${PGDATABASE:-orderingdb}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${PGPORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER:-orderapp} -d ${PGDATABASE:-orderingdb}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: 1861-publichouse-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PGHOST: postgres
      PGUSER: ${PGUSER:-orderapp}
      PGPASSWORD: ${PGPASSWORD:-publichouse1861}
      PGDATABASE: ${PGDATABASE:-orderingdb}
      PGPORT: 5432
      PORT: 5000
      DATABASE_URL: postgresql://${PGUSER:-orderapp}:${PGPASSWORD:-publichouse1861}@postgres:5432/${PGDATABASE:-orderingdb}
      SESSION_SECRET: ${SESSION_SECRET:-1861PublicHouseOrderingAppSecret}
    ports:
      - "5000:5000"
    command: node server-prod.js

volumes:
  postgres_data:
    name: 1861-publichouse-postgres-data